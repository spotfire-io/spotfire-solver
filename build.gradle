import com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer

buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.21'
    id "io.spring.dependency-management" version '1.0.6.RELEASE'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
}

group 'io.spotfire'
version '1.0.0-SNAPSHOT'

ext {
    kotlin_version = '1.3.21'
    spek_version = '2.0.2'
    moshi_version = '1.8.0'
    log4j_version = '2.8.2'
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.2.1'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "com.squareup.moshi:moshi:1.8.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.8.0"
    implementation "com.squareup.okhttp3:okhttp:3.14.1"
    implementation "org.codehaus.plexus:plexus-archiver:2.2"

    implementation "org.optaplanner:optaplanner-core:7.20.0.Final"

    implementation "io.github.cdimascio:java-dotenv:5.0.1"
    implementation "org.apache.logging.log4j:log4j-api:$log4j_version"
    implementation "org.apache.logging.log4j:log4j-core:$log4j_version"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"

    implementation "com.amazonaws:aws-lambda-java-core:1.2.0"
    implementation "com.amazonaws:aws-lambda-java-log4j2:1.1.0"
    implementation "com.amazonaws:aws-lambda-java-events:2.2.6"

    // for assertion
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.1.0"

    testImplementation("org.spekframework.spek2:spek-dsl-jvm:$spek_version") {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntimeOnly("org.spekframework.spek2:spek-runner-junit5:$spek_version") {
        exclude group: 'org.jetbrains.kotlin'
    }

    // spek requires kotlin-reflect, can be omitted if already in the classpath
    testRuntimeOnly "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
}

// setup the test task
test {
    useJUnitPlatform {
        includeEngines 'spek2'
    }
    testLogging.showStandardStreams = true
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar{
    transform(Log4j2PluginsCacheFileTransformer)
//    mergeServiceFiles {
//        path = "META-INF/"
//    }

}

task deploy(type: Exec, dependsOn: 'shadowJar') {
    commandLine 'npx', 'serverless', 'deploy', '--package_version', version, '--stage', 'test'
}